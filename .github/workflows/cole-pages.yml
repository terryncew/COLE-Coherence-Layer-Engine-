name: COLE Pages — Lean 1.4L (guards + status) v2

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - "scripts/ingest_14L.py"
      - "docs/**"
      - ".github/workflows/cole-pages-lean-14l.yml"
      # TIP: remove the three 'paths' lines if you want this to run on ANY push to main.

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages-lean-14l
  cancel-in-progress: true   # avoid two runs racing the same push

jobs:
  build-and-deploy:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # Checkout the real ref with full history (so rebase works)
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Ensure folders
        run: |
          mkdir -p docs/history docs/style_history docs/memory schema scripts artifacts logs/train logs/eval
          mkdir -p .state

      - name: Bootstrap receipt (if missing)
        run: |
          if [ ! -f docs/receipt.latest.json ]; then
            cat > docs/receipt.latest.json <<'JSON'
          {
            "receipt_version": "olr/1.4L",
            "claim": "Starter receipt for COLE (lean).",
            "because": ["Self-checking, self-reporting agent receipt."],
            "but": [],
            "so": "Lean guards will enrich this with κ (kappa), Δhol and UCR/ES.",
            "openline_frame": {
              "digest": { "b0":1, "cycle_plus":0, "x_frontier":0, "s_over_c":1.0, "depth":1, "ucr":0.00 },
              "telem":  { "kappa_eff":0.20, "delta_hol":0.05, "evidence_strength":0.50, "del_suspect": false, "cost_tokens": 42 },
              "t_logical": 1730000000
            },
            "status": "green"
          }
          JSON
          fi

      - name: Seed guard config (1.4L) & input (if missing)
        run: |
          if [ ! -f docs/guard.14l.json ]; then
            cat > docs/guard.14l.json <<'JSON'
          { "tau_k": 0.75, "tau_hol": 0.35, "ucr_min": 0.40, "es_min": 0.25 }
          JSON
          fi
          if [ ! -f docs/input.txt ]; then
            cat > docs/input.txt <<'TXT'
          Claim: The adapter builds a small reasoning graph.
          Because we link evidence with markers, structure quality is estimable.
          Therefore density vs structure is checkable.
          TXT
          fi

      - name: Starter index (if missing) — light UI + friendly messages
        run: |
          if [ ! -f docs/index.html ]; then
            cat > docs/index.html <<'HTML'
          <!doctype html><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1,viewport-fit=cover">
          <title>COLE · OpenLine Receipt (Lean 1.4L)</title>
          <style>
            :root{--bg:#fff;--ink:#0b0b10;--muted:#6a6f7a;--line:#e9ecf2;--ok:#16a34a;--warn:#f59e0b;--bad:#dc2626}
            html,body{margin:0;background:var(--bg);color:var(--ink);font:15px/1.5 system-ui,-apple-system,Segoe UI,Roboto,Inter}
            .wrap{max-width:960px;margin:0 auto;padding:18px}
            .card{border:1px solid var(--line);border-radius:14px;background:#fff;padding:12px;margin-top:10px}
            .grid{display:grid;grid-template-columns:repeat(6,1fr);gap:10px}
            @media(max-width:900px){.grid{grid-template-columns:repeat(3,1fr)}}
            @media(max-width:560px){.grid{grid-template-columns:repeat(2,1fr)}}
            .kpi{display:flex;align-items:center;gap:8px}
            .lamp{width:12px;height:12px;border-radius:50%}
            .ok{background:var(--ok)} .warn{background:var(--warn)} .bad{background:var(--bad)} .mut{background:#c7c7cc}
            .big{font-weight:700;font-size:20px}
            .muted{color:var(--muted);font-size:12px}
            .pill{display:inline-flex;align-items:center;gap:8px;padding:6px 10px;border:1px solid var(--line);border-radius:999px;background:#f6f8fb;font-weight:600}
            .dot{width:10px;height:10px;border-radius:50%}
            .row{display:flex;gap:8px;flex-wrap:wrap;margin-top:10px}
            .btn{background:#0b0b10;color:#fff;padding:10px 12px;border-radius:10px;text-decoration:none;font-weight:700}
            .bar{height:10px;background:#f2f4f8;border:1px solid var(--line);border-radius:999px;position:relative;overflow:hidden}
            .fill{position:absolute;inset:0 100% 0 0}
          </style>
          <div class="wrap">
            <h1 style="margin:0 0 4px">COLE · OpenLine Receipt</h1>
            <p class="muted" style="margin:0 0 8px">“Receipts, not rhetoric.” This page reads <code>docs/receipt.latest.json</code> and <code>docs/guard.14l.json</code>.</p>
            <div class="pill" id="pill" hidden><span class="dot" id="dot"></span><span id="ptxt">status</span></div>

            <div class="grid" id="grid"></div>

            <div class="card">
              <div class="row">
                <a class="btn" href="./receipt.latest.json" download>Download receipt</a>
                <a class="btn" href="./history/">History</a>
              </div>
              <div style="margin-top:8px" class="muted" id="why">—</div>
              <div style="margin-top:4px" class="muted" id="fix">—</div>
            </div>

            <div class="card" id="bars" style="display:none">
              <div class="muted" style="margin-bottom:6px">Signals at a glance</div>
              <div style="display:grid;grid-template-columns:80px 1fr 60px;gap:8px;align-items:center">
                <div class="muted">κ</div><div class="bar"><div class="fill" id="bk"></div></div><div id="vk" style="text-align:right">—</div>
                <div class="muted">Δhol</div><div class="bar"><div class="fill" id="bd"></div></div><div id="vd" style="text-align:right">—</div>
              </div>
            </div>
          </div>
          <script>
          (async()=>{
            const $=id=>document.getElementById(id); const grid=$('grid');
            const color=s=>s==='red'?'#dc2626':(s==='amber'?'#f59e0b':'#16a34a');
            const tile=(label,val,hint,cls)=>{const d=document.createElement('div');d.className='card';
              d.innerHTML=`<div class="kpi"><div class="lamp ${cls||'mut'}"></div><div class="big">${val}</div></div>
              <div class="muted">${label}<br><span style="font-size:11px">${hint||''}</span></div>`; return d;};
            let rec=null; try{const u=new URL('./receipt.latest.json',location.href);u.searchParams.set('v',Date.now());
              const r=await fetch(u,{cache:'no-store'}); rec=await r.json();}catch{}
            if(!rec){ grid.appendChild(tile('No receipt found','—','Push docs/receipt.latest.json','warn')); return; }

            const f=rec.openline_frame||{}, d=f.digest||{}, t=f.telem||{}, latest=(rec.temporal&&rec.temporal.latest)||{};
            const k=+(t.kappa_eff ?? latest.kappa ?? 0), dh=+(t.delta_hol ?? latest.delta_hol ?? 0);
            const u=+(d.ucr ?? 0), es=+(t.evidence_strength ?? 0), cyc=+(d.cycle_plus ?? 0), X=+(d.x_frontier ?? 0);

            const status=(rec.status||'').toLowerCase() ||
              ((cyc>0)?'red':
               ((k>=0.75 && u>=0.40 && es<0.25)||(dh>=0.35 && t.del_suspect)?'red':
                ((k>=0.75||dh>=0.35||u>=0.40)?'amber':'green')));

            $('pill').hidden=false; document.getElementById('dot').style.background=color(status); document.getElementById('ptxt').textContent=status.toUpperCase();

            grid.appendChild(tile('κ (stress)', k.toFixed(3),'Density vs structure', k>=0.85?'bad':(k>=0.70?'warn':'ok')));
            grid.appendChild(tile('Δhol (drift)', dh.toFixed(3),'Path mismatch (EWMA JSD)', dh>=0.35?'warn':'ok'));
            grid.appendChild(tile('UCR', (u*100).toFixed(0)+'%','Unsupported-claim ratio', u>=0.40?'warn':'ok'));
            grid.appendChild(tile('ES', (es*100).toFixed(0)+'%','Evidence strength', es<0.25?'warn':'ok'));
            grid.appendChild(tile('Cycles', String(cyc),'cycle⁺ > 0 → RED', cyc>0?'bad':'ok'));
            grid.appendChild(tile('X (contradictions)', String(X),'Unresolved contradictions', X>0?'warn':'ok'));

            // Friendly messages (even when green)
            let why='All guardrails within thresholds';
            let fix='No action needed — receipts are saving to docs/receipt.latest.json.';
            if (cyc>0){ why='Circular reasoning detected'; fix='Break the loop; add evidence or restructure claims.'; }
            else if (dh>=0.35 && t.del_suspect){ why='Path drift with potential silent deletion'; fix='Add a resolution/handling line for dropped contradictions.'; }
            else if (k>=0.75 && u>=0.40 && es<0.25){ why='High stress + unsupported claims + weak evidence'; fix='Place citations or “according to…” near claims.'; }
            else if (k>=0.75){ why='Elevated stress (κ high)'; fix='Shorten or add structure/support so S* rises.'; }
            else if (dh>=0.35){ why='Path drift (Δhol high)'; fix='Stabilize reasoning across turns; avoid silent rewrites.'; }
            else if (u>=0.40){ why='Many claims lack nearby support'; fix='Put evidence within ±1 sentence of each claim.'; }
            $('why').textContent=why; $('fix').textContent=fix;

            // Bars
            const bars=document.getElementById('bars'); if(bars){
              const bk=document.getElementById('bk'), bd=document.getElementById('bd');
              const vk=document.getElementById('vk'), vd=document.getElementById('vd');
              bars.style.display='block';
              bk.style.background=color(status); bd.style.background=color(status);
              bk.style.right=(100-Math.min(100,(k/0.75)*100))+'%';
              bd.style.right=(100-Math.min(100,(dh/0.35)*100))+'%';
              vk.textContent=k.toFixed(3); vd.textContent=dh.toFixed(3);
            }
          })();
          </script>
          HTML
          fi

      # -------- run lean guards -> write receipt
      - name: Lean guard (OLR/1.4L)
        run: |
          if [ -f scripts/ingest_14L.py ]; then
            python scripts/ingest_14L.py
          else
            echo "::error ::scripts/ingest_14L.py missing"; exit 1
          fi

      - name: Snapshot receipt to history
        run: |
          ts=$(date +%s)
          cp docs/receipt.latest.json docs/history/receipt-$ts.json || true

      # Build a simple history index
      - name: Build history index
        run: |
          out="docs/history/index.html"
          echo '<!doctype html><meta charset="utf-8"><title>History</title><style>body{font:15px/1.5 system-ui;margin:18px} a{display:block;margin:4px 0}</style><h1>Receipt History</h1>' > "$out"
          for f in $(ls -1t docs/history/receipt-*.json 2>/dev/null | sed 's#docs/history/##'); do
            echo "<a href=\"$f\">$f</a>" >> "$out"
          done

      # Rebase-safe commit to avoid "remote contains work you do not have locally"
      - name: Commit docs & state back to repo
        env:
          BRANCH: ${{ github.ref_name }}
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A docs .state || true
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore(1.4L): update receipt & status [skip ci]"
            git fetch origin "$BRANCH"
            git pull --rebase origin "$BRANCH"
            git push origin HEAD:"$BRANCH"
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

      - name: Deploy to Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: CI Guard Harness (one-line verdict)
        run: |
          if [ -f scripts/ci_guard_harness.py ]; then
            python scripts/ci_guard_harness.py || true
          else
            echo "[skip] ci_guard_harness.py"
          fi
