name: COLE Pages (guards + status)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build-and-deploy:
    if: github.actor != 'github-actions[bot]'   # avoid loop on bot commits
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Ensure folders
        run: |
          mkdir -p docs/history docs/style_history docs/memory schema scripts artifacts logs/train logs/eval
          mkdir -p .state

      - name: Bootstrap receipt (if missing)
        run: |
          if [ ! -f docs/receipt.latest.json ]; then
            cat > docs/receipt.latest.json <<'JSON'
          {
            "receipt_version": "olr/1.4L",
            "claim": "Starter receipt for COLE (lean).",
            "because": ["Self-checking, self-reporting agent receipt."],
            "but": [],
            "so": "Lean guards will enrich this with κ (kappa), Δhol and UCR/ES.",
            "openline_frame": { "digest": {}, "telem": {} },
            "status": "green",
            "temporal": { "latest": {} }
          }
          JSON
          fi

      - name: Seed guard config (1.4L) & input (if missing)
        run: |
          if [ ! -f docs/guard.14l.json ]; then
            cat > docs/guard.14l.json <<'JSON'
          { "tau_k": 0.75, "tau_hol": 0.35, "ucr_min": 0.40, "es_min": 0.25 }
          JSON
          fi
          if [ ! -f docs/input.txt ]; then
            cat > docs/input.txt <<'TXT'
          Claim: The adapter builds a small reasoning graph.
          Because we link evidence with markers, structure quality is estimable.
          Therefore density vs structure is checkable.
          TXT
          fi

      - name: Starter index (if missing)
        run: |
          if [ ! -f docs/index.html ]; then
            cat > docs/index.html <<'HTML'
          <!doctype html>
          <meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1">
          <title>COLE status</title>
          <style>
            :root { --bg:#0b0b0f; --fg:#e8e8f0; --mut:#9aa0aa; --tile:#14161b }
            body{margin:0;padding:24px;font:16px/1.5 system-ui,-apple-system,Segoe UI,Roboto;background:var(--bg);color:var(--fg)}
            .grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(260px,1fr));gap:14px}
            .tile{background:var(--tile);border-radius:10px;padding:14px}
            .muted{color:var(--mut);font-size:12px}
            .small{font-size:14px;margin:6px 0}
            .tag{display:inline-block;padding:.2em .6em;border-radius:6px;color:#fff}
          </style>
          <h1>COLE · agent health & rhythm</h1>
          <div class="grid">
            <div class="tile">
              <div class="muted">Coherence Signals</div>
              <div class="small">κ <b id="kappa">—</b> · Δhol <b id="dhol">—</b></div>
              <div class="small">cycles <b id="cycles">—</b> · X <b id="xfront">—</b></div>
              <div class="small">status <b id="status" class="tag">—</b></div>
            </div>
          </div>
          <script>
          (async()=>{
            try{
              const u = new URL('./receipt.latest.json', location.href);
              u.searchParams.set('v', Date.now().toString());
              const r = await fetch(u,{cache:'no-store'}); if(!r.ok) return;
              const j = await r.json();
              const of=(j.openline_frame||{}), d=(of.digest||{}), t=(of.telem||{}), latest=(j.temporal&&j.temporal.latest)||{};
              const k = (typeof latest.kappa==='number') ? latest.kappa : (t.kappa_eff);
              const h = (typeof latest.delta_hol==='number') ? latest.delta_hol : (t.delta_hol);
              const S=(val)=> Number.isFinite(+val)?(+val).toFixed(3):'—';
              const E=(id,v)=>{const e=document.getElementById(id); if(e) e.textContent=v;};
              E('kappa', S(k)); E('dhol', S(h)); E('cycles', d.cycle_plus ?? '—'); E('xfront', d.x_frontier ?? '—');
              const st = document.getElementById('status'); const s=j.status||'green';
              st.textContent = s.toUpperCase();
              st.style.background = s==='red' ? '#7f1d1d' : (s==='amber' ? '#a16207' : '#14532d');
            }catch(e){}
          })();
          </script>
          HTML
          fi

      # -------- run lean guards -> write receipt
      - name: Lean guard (OLR/1.4L)
        run: |
          if [ -f scripts/ingest_14L.py ]; then
            python scripts/ingest_14L.py
          else
            echo "::error ::scripts/ingest_14L.py missing"; exit 1
          fi

      - name: Snapshot receipt to history
        run: |
          ts=$(date +%s)
          cp docs/receipt.latest.json docs/history/receipt-$ts.json || true

      - name: Commit docs & state back to repo
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A docs .state
          if ! git diff --cached --quiet; then
            git commit -m "chore(1.4L): update receipt & status [skip ci]"
            git push
          else
            echo "No changes to commit"
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

      - name: Deploy to Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: CI Guard Harness (one-line verdict)
        run: |
          if [ -f scripts/ci_guard_harness.py ]; then
            python scripts/ci_guard_harness.py || true
          else
            echo "[skip] ci_guard_harness.py"
          fi
